#Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. #What is the value of this product?
import timeit
start_time = timeit.default_timer()
str1=[]
num1=str(73167176531330624919225119674426574742355349194934)
num1+=str(96983520312774506326239578318016984801869478851843)
num1+=str(85861560789112949495459501737958331952853208805511)
num1+=str(12540698747158523863050715693290963295227443043557)
num1+=str(66896648950445244523161731856403098711121722383113)
num1+=str(62229893423380308135336276614282806444486645238749)
num1+=str(30358907296290491560440772390713810515859307960866)
num1+=str(70172427121883998797908792274921901699720888093776)
num1+=str(65727333001053367881220235421809751254540594752243)
num1+=str(52584907711670556013604839586446706324415722155397)
num1+=str(53697817977846174064955149290862569321978468622482)
num1+=str(83972241375657056057490261407972968652414535100474)
num1+=str(82166370484403199890008895243450658541227588666881)
num1+=str(16427171479924442928230863465674813919123162824586)
num1+=str(17866458359124566529476545682848912883142607690042)
num1+=str(242190226710556263211111093705442175069416589604080)
num1+=str(7198403850962455444362981230987879927244284909188)
num1+=str(845801561660979191338754992005240636899125607176060)
num1+=str(5886116467109405077541002256983155200055935729725)
num1+=str(71636269561882670428252483600823257530420752963450)


for p in num1:
    str1.append(p)
num1=str1

print(num1)
facs=[]
bprod=1
for i in range(0,len(num1)-12):
    prod=1
    for j in range(0,13): 
        prod*=int(num1[i+j])

    if prod>bprod:
        bprod=prod  
        facs=[]    
        for j in range(0,13):
            facs.append(num1[i+j])
print(bprod)
print(facs)    




elapsed = timeit.default_timer() - start_time
print(elapsed)

